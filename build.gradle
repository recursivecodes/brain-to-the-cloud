plugins {
    id("groovy")
    id("com.github.johnrengelman.shadow") version "7.1.0"
    id("io.micronaut.application") version "2.0.8"
}

version = "0.1"
group = "codes.recursive"

repositories {
    mavenCentral()
    maven {
        url "https://s01.oss.sonatype.org/content/repositories/snapshots"
    }
}

micronaut {
    runtime("netty")
    testRuntime("spock2")
    processing {
        incremental(true)
        annotations("codes.recursive.*")
    }
}

dependencies {
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    implementation("io.micronaut.data:micronaut-data-hibernate-jpa")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut.mqtt:micronaut-mqttv3")
    implementation("io.micronaut.oraclecloud:micronaut-oraclecloud-atp")
    implementation("io.micronaut.oraclecloud:micronaut-oraclecloud-sdk")
    implementation("io.micronaut.sql:micronaut-jdbc-ucp")
    implementation("io.micronaut.views:micronaut-views-thymeleaf")
    implementation("javax.annotation:javax.annotation-api")
    runtimeOnly("ch.qos.logback:logback-classic")
    testImplementation("org.testcontainers:spock")
    testImplementation("org.testcontainers:testcontainers")
    implementation("io.micronaut:micronaut-validation")

    // use rxjava2 (required by oracle cloud vault)
    implementation("io.micronaut.rxjava2:micronaut-rxjava2")

    // discovery client
    runtimeOnly("io.micronaut:micronaut-discovery-client:2.0.1")

    // ojdbc driver
    implementation("com.oracle.database.jdbc:ojdbc11-production:21.1.0.0")
    // oci sdk
    implementation("com.oracle.oci.sdk:oci-java-sdk-vault:2.10.0")
    implementation("com.oracle.oci.sdk:oci-java-sdk-secrets:2.10.0")
    implementation("com.oracle.oci.sdk:oci-java-sdk-common:2.10.0")

    // jackson java-8 LocalDate support
    implementation("com.fasterxml.jackson.datatype:jackson-datatype-jsr310")

    // acme
    implementation("io.micronaut.acme:micronaut-acme")
}


application {
    mainClass.set("codes.recursive.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}

dockerfile {
    baseImage("adoptopenjdk/openjdk11-openj9:jdk-11.0.11_9_openj9-0.26.0-alpine-slim")
    exportPorts(8080,80,443,8443)
}

dockerBuild {
    images = ["phx.ocir.io/toddrsharp/bttc/bttc-client:latest"]
}


